-- Create the database if it doesn't exist
CREATE DATABASE IF NOT EXISTS CompanyDB;
USE CompanyDB;

-- Create the Customers table
CREATE TABLE Customers (
    Cust_No INT PRIMARY KEY,
    Company VARCHAR(100),
    Cust_Rep INT,
    Credit_Limit DECIMAL(10, 2)
);

-- Create the Sales_Representative table
CREATE TABLE Sales_Representative (
    Rep_no INT PRIMARY KEY,
    Name VARCHAR(50),
    Re_office INT,
    Quota DECIMAL(10, 2),
    sales DECIMAL(10, 2)
);

-- Create the Orders table
CREATE TABLE Orders (
    Order_no INT PRIMARY KEY,
    cust INT,
    product VARCHAR(100),
    Quantity INT,
    amount DECIMAL(10, 2),
    Disc DECIMAL(10, 2),
    FOREIGN KEY (cust) REFERENCES Customers (Cust_No)
);

-- Insert sample data into Customers
INSERT INTO Customers (Cust_No, Company, Cust_Rep, Credit_Limit)
VALUES
    (1, 'ABC Corp', 101, 50000.00),
    (2, 'XYZ Inc', 102, 75000.00),
    (3, 'TCS', 103, 100000.00),
    (4, 'Infosys', 101, 80000.00),
    (5, 'Wipro', 104, 70000.00);

-- Insert sample data into Sales_Representative
INSERT INTO Sales_Representative (Rep_no, Name, Re_office, Quota, sales)
VALUES
    (101, 'John Smith', 1, 100000.00, 90000.00),
    (102, 'Jane Doe', 2, 90000.00, 85000.00),
    (103, 'Mike Johnson', 1, 120000.00, 110000.00),
    (104, 'Sara Williams', 3, 80000.00, 78000.00);

-- Insert sample data into Orders
INSERT INTO Orders (Order_no, cust, product, Quantity, amount, Disc)
VALUES
    (101, 1, 'Widget', 100, 35000.00, 5000.00),
    (102, 2, 'Gadget', 50, 18000.00, 2000.00),
    (103, 3, 'Software', 10, 12000.00, 1000.00),
    (104, 4, 'Hardware', 20, 8000.00, 500.00),
    (105, 5, 'Software', 15, 15000.00, 1500.00);

-- 1. List for each customer: customer name, their rep's name, their rep's office number
SELECT C.Company AS CustomerName, SR.Name AS RepName, SR.Re_office AS RepOfficeNumber
FROM Customers C
JOIN Sales_Representative SR ON C.Cust_Rep = SR.Rep_no;

-- 2. List for each customer: customer name, credit limit, rep name serving the customer, and rep sales
SELECT C.Company AS CustomerName, C.Credit_Limit, SR.Name AS RepName, SR.sales AS RepSales
FROM Customers C
JOIN Sales_Representative SR ON C.Cust_Rep = SR.Rep_no;

-- 3. List orders over $25,000, including the name of the salesperson who took the order and the name of the customer who placed it
SELECT O.Order_no, O.amount, SR.Name AS SalespersonName, C.Company AS CustomerName
FROM Orders O
JOIN Sales_Representative SR ON O.cust = SR.Rep_no
JOIN Customers C ON O.cust = C.Cust_No
WHERE O.amount > 25000;

-- 4. List all orders showing the number and amount, and the name and credit limit of the customer
SELECT O.Order_no, O.amount, C.Company AS CustomerName, C.Credit_Limit
FROM Orders O
JOIN Customers C ON O.cust = C.Cust_No;

-- 5. Find the products which have been sold to TCS
SELECT DISTINCT O.product
FROM Orders O
JOIN Customers C ON O.cust = C.Cust_No
WHERE C.Company = 'TCS';

-- 6. Find the company which has been offered the maximum discount
SELECT C.Company
FROM Customers C
WHERE C.Cust_No = (SELECT Cust FROM Orders ORDER BY Disc DESC LIMIT 1);

-- 7. Find the sales representatives who work in the same office
SELECT S1.Rep_no, S1.Name AS RepName1, S2.Name AS RepName2, S1.Re_office AS OfficeNumber
FROM Sales_Representative S1
JOIN Sales_Representative S2 ON S1.Re_office = S2.Re_office AND S1.Rep_no <> S2.Rep_no;

-- 8. Find the product-wise sale amount of products which exceed $12,000
SELECT O.product, SUM(O.amount) AS TotalSaleAmount
FROM Orders O
GROUP BY O.product
HAVING SUM(O.amount) > 12000;

-- 9. Find the names of products, customers, and representatives involved in the sale of software
SELECT O.product AS ProductName, C.Company AS CustomerName, SR.Name AS RepName
FROM Orders O
JOIN Customers C ON O.cust = C.Cust_No
JOIN Sales_Representative SR ON C.Cust_Rep = SR.Rep_no
WHERE O.product = 'Software';

-- 10. Find the credit limit of the company and the discount it has received
SELECT C.Company, C.Credit_Limit, O.Disc AS Discount
FROM Customers C
JOIN Orders O ON C.Cust_No = O.cust;
